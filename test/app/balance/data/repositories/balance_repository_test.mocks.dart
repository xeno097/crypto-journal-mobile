// Mocks generated by Mockito 5.0.11 from annotations
// in crypto_journal_mobile/test/app/balance/data/repositories/balance_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:crypto_journal_mobile/app/balance/data/data_sources/balance_remote_data_source.dart'
    as _i3;
import 'package:crypto_journal_mobile/app/balance/data/inputs/get_balance_input.dart'
    as _i5;
import 'package:crypto_journal_mobile/app/balance/data/models/balance_model.dart'
    as _i2;
import 'package:crypto_journal_mobile/shared/data/network_info/network_info.dart'
    as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis

class _FakeBalanceModel extends _i1.Fake implements _i2.BalanceModel {}

/// A class which mocks [IBalanceRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockIBalanceRemoteDataSource extends _i1.Mock
    implements _i3.IBalanceRemoteDataSource {
  MockIBalanceRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.BalanceModel> getBalance(
          {_i5.GetBalanceInput? getBalanceInput}) =>
      (super.noSuchMethod(
              Invocation.method(
                  #getBalance, [], {#getBalanceInput: getBalanceInput}),
              returnValue: Future<_i2.BalanceModel>.value(_FakeBalanceModel()))
          as _i4.Future<_i2.BalanceModel>);
}

/// A class which mocks [INetworkInfo].
///
/// See the documentation for Mockito's code generation for more information.
class MockINetworkInfo extends _i1.Mock implements _i6.INetworkInfo {
  MockINetworkInfo() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}
